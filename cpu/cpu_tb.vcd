$date
	Wed Mar 10 10:46:57 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module micpu $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 1 & s_pila $end
$var wire 1 ' s_inm $end
$var wire 1 ( s_inc $end
$var wire 1 ) push $end
$var wire 1 * pop $end
$var wire 6 + opcode [5:0] $end
$var wire 3 , op_alu [2:0] $end
$scope module cd_1 $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 - zalu $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 8 . wd3 [7:0] $end
$var wire 10 / sum_to_mux [9:0] $end
$var wire 16 0 sal_mem_pro [15:0] $end
$var wire 1 & s_pila $end
$var wire 1 ' s_inm $end
$var wire 1 ( s_inc $end
$var wire 8 1 rd2 [7:0] $end
$var wire 8 2 rd1 [7:0] $end
$var wire 1 ) push $end
$var wire 1 * pop $end
$var wire 10 3 pila_to_mux [9:0] $end
$var wire 10 4 pc_to_mem [9:0] $end
$var wire 6 5 opcode [5:0] $end
$var wire 3 6 op_alu [2:0] $end
$var wire 10 7 mux_to_pc [9:0] $end
$var wire 10 8 mux_to_mux [9:0] $end
$var wire 8 9 alu_to_mux [7:0] $end
$scope module alu1 $end
$var wire 8 : y [7:0] $end
$var wire 1 - zero $end
$var wire 3 ; op_alu [2:0] $end
$var wire 8 < b [7:0] $end
$var wire 8 = a [7:0] $end
$var reg 8 > s [7:0] $end
$upscope $end
$scope module banco $end
$var wire 1 ! clk $end
$var wire 4 ? ra1 [3:0] $end
$var wire 4 @ ra2 [3:0] $end
$var wire 4 A wa3 [3:0] $end
$var wire 1 % we3 $end
$var wire 8 B wd3 [7:0] $end
$var wire 8 C rd2 [7:0] $end
$var wire 8 D rd1 [7:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 ! clk $end
$var wire 1 - d $end
$var wire 1 " reset $end
$var wire 1 $ carga $end
$var reg 1 # q $end
$upscope $end
$scope module mem_prog $end
$var wire 1 ! clk $end
$var wire 16 E rd [15:0] $end
$var wire 10 F a [9:0] $end
$upscope $end
$scope module mux_1 $end
$var wire 10 G d0 [9:0] $end
$var wire 10 H y [9:0] $end
$var wire 1 ( s $end
$var wire 10 I d1 [9:0] $end
$upscope $end
$scope module mux_2 $end
$var wire 8 J d0 [7:0] $end
$var wire 8 K d1 [7:0] $end
$var wire 8 L y [7:0] $end
$var wire 1 ' s $end
$upscope $end
$scope module mux_3 $end
$var wire 10 M d0 [9:0] $end
$var wire 10 N y [9:0] $end
$var wire 1 & s $end
$var wire 10 O d1 [9:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ! clk $end
$var wire 10 P d [9:0] $end
$var wire 1 " reset $end
$var reg 10 Q q [9:0] $end
$upscope $end
$scope module pila1 $end
$var wire 1 ! clk $end
$var wire 10 R inpush [9:0] $end
$var wire 1 " reset $end
$var wire 1 ) push $end
$var wire 1 * pop $end
$var reg 10 S outpop [9:0] $end
$var reg 3 T sp [2:0] $end
$upscope $end
$scope module sum1 $end
$var wire 10 U a [9:0] $end
$var wire 10 V b [9:0] $end
$var wire 10 W y [9:0] $end
$upscope $end
$upscope $end
$scope module uc_1 $end
$var wire 6 X opcode [5:0] $end
$var wire 1 # z $end
$var reg 3 Y op_alu [2:0] $end
$var reg 1 * pop $end
$var reg 1 ) push $end
$var reg 1 ( s_inc $end
$var reg 1 ' s_inm $end
$var reg 1 & s_pila $end
$var reg 1 % we3 $end
$var reg 1 $ wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx Y
b100100 X
b1 W
b1 V
b0 U
b1 T
bx S
b0 R
b0 Q
bx P
bx O
bx N
b0x M
bx L
b0 K
bx J
b1 I
b0x H
b0 G
b0 F
b1001000000000000 E
b0 D
b0 C
bx B
b0 A
b0 @
b0 ?
bx >
b0 =
b0 <
bx ;
bx :
bx 9
b0x 8
bx 7
bx 6
b100100 5
b0 4
bx 3
b0 2
b0 1
b1001000000000000 0
b1 /
bx .
x-
bx ,
b100100 +
x*
1)
x(
x'
1&
x%
x$
0#
1"
1!
$end
#1000
b10 T
0"
#3000
0!
#6000
bx 1
bx <
bx C
bx 2
bx =
bx D
bx 8
bx H
bx M
bx +
bx 5
bx X
bx K
bx A
bx @
bx ?
bx G
bx /
bx I
bx W
bx 0
bx E
bx 4
bx F
bx Q
bx R
bx U
b11 T
1!
#9000
0!
#12000
b100 T
1!
#15000
0!
#18000
b101 T
1!
#21000
0!
#24000
b110 T
1!
#27000
0!
#30000
b111 T
1!
#33000
0!
#36000
b0 T
1!
#39000
0!
#42000
b1 T
1!
#45000
0!
#48000
b10 T
1!
#51000
0!
#54000
b11 T
1!
